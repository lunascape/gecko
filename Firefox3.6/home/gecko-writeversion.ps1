###############################################################################
# gecko-writeversion.ps1
# 
# Geckoのバージョンを書いたファイルを生成する
# 

# スクリプト引数
param(
  [string]$DistDir	,		# 出力先フォルダ
  [string]$OutputDir		# 出力先フォルダ
)

# $str から $pattern に一致する行を取り出し、$replace に置換して返す
function pickup_string($str, $pattern, $replace)
{
	return ($str | Select-String -pattern $pattern) -creplace $pattern,$replace
}

$ApplicationIni = $(Get-Content ${DistDir}\bin\application.ini)

$GECKO_VERSION_MAJOR = pickup_string $ApplicationIni "^Version=([0-9]+)\.([0-9]+)\.([0-9]+)" '$1'
$GECKO_VERSION_MINOR = pickup_string $ApplicationIni "^Version=([0-9]+)\.([0-9]+)\.([0-9]+)" '$2'
$GECKO_VERSION_REVISION = pickup_string $ApplicationIni "^Version=([0-9]+)\.([0-9]+)\.([0-9]+)" '$3'
$GECKO_VERSION_BUILD_DATE = pickup_string $ApplicationIni "^BuildID=([0-9]{8})[0-9]+" '$1'


# 変更セット番号が 65535 を超えるようであれば、この数値を変更して対処する
$CHANGESET_BASE_NUMBER = 0

# TFSの変更セット番号を取得する
$LUNASCAPE_VERSION_CHANGESET	= (tf changeset /latest /noprompt | Select-Object -First 1) -replace "^[^0-9]*([0-9]+)",'$1'
$GECKO_VERSION_BUILD		= $LUNASCAPE_VERSION_CHANGESET - $CHANGESET_BASE_NUMBER

$VersionFileName = "gecko-version.h"

@"
// ${versionFileName}
// This file was generated by gecko-writeversion.ps1
// DO NOT EDIT THIS FILE

#pragma once

/////////////////////////////////////////////////////////////////////////////
//
// Version
//

#define GECKO_VERSION_MAJOR		${GECKO_VERSION_MAJOR}
#define GECKO_VERSION_MINOR		${GECKO_VERSION_MINOR}
#define GECKO_VERSION_REVISION		${GECKO_VERSION_REVISION}
#define GECKO_VERSION_BUILD		${GECKO_VERSION_BUILD}

#define GECKO_VERSION_BUILD_DATE	${GECKO_VERSION_BUILD_DATE}
"@ | Out-File -filePath $OutputDir$VersionFileName -encoding UTF8 -force
